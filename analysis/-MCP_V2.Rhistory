get.tip.states  = T)
MFT_res.corHMM
plot(MFT_res.corHMM$phy)
phy = MFT_res.corHMM$phy
data = MFT_res.corHMM$data
model = MFT_res.corHMM$solution
model[is.na(model)] <- 0
diag(model) <- -rowSums(model) # run get simmap (can be plotted using phytools)
simmap <- makeSimmap(tree=phy, data=data, model=model, rate.cat=2, nSim=1, nCores=1)
phytools::plotSimmap(simmap[[1]], fsize=.5)
simmap <- makeSimmap(tree=phy, data=data, model=model, rate.cat=2, nSim=1, nCores=1)
simmap <- makeSimmap(tree=phy, data=data, model=model, rate.cat=2, nSim=10, nCores=1)
simmap <- makeSimmap(tree=phy, data=data, model=model, rate.cat=2, nSim=1, nCores=1)
MFT_LegendAndRate <- getStateMat4Dat(tandem_data)
MFT_LegendAndRate
MFT_R1 <- MFT_LegendAndRate$rate.mat
MFT_R2 <- dropStateMatPars(MFT_LegendAndRate$rate.mat, c(1,2))
MFT_ObsStateClasses <- list(MFT_R1, MFT_R2)
MFT_RateClassMat <- getRateCatMat(2)
MFT_RateClassMat <- equateStateMatPars(MFT_RateClassMat, 1:2)
MFT_FullMat <- getFullMat(MFT_ObsStateClasses, MFT_RateClassMat)
MFT_res.corHMM <- corHMM(phy = tandem_tree, data = tandem_data,
rate.cat = 2, rate.mat = MFT_FullMat,
node.states = "none", root.p = "maddfitz",
get.tip.states  = T)
MFT_res.corHMM
plot(MFT_res.corHMM$phy)
phy = MFT_res.corHMM$phy
data = MFT_res.corHMM$data
model = MFT_res.corHMM$solution
model[is.na(model)] <- 0
diag(model) <- -rowSums(model) # run get simmap (can be plotted using phytools)
simmap <- makeSimmap(tree=phy, data=data, model=model, rate.cat=2, nSim=1, nCores=1)
MFT_res.corHMM <- corHMM(phy = tandem_tree, data = tandem_data,
rate.cat = 2, rate.mat = MFT_FullMat,
node.states = "none", root.p = "maddfitz",
get.tip.states  = T)
MFT_res.corHMM
plot(MFT_res.corHMM$phy)
phy = MFT_res.corHMM$phy
data = MFT_res.corHMM$data
model = MFT_res.corHMM$solution
model[is.na(model)] <- 0
diag(model) <- -rowSums(model) # run get simmap (can be plotted using phytools)
simmap <- makeSimmap(tree=phy, data=data, model=model, rate.cat=2, nSim=10, nCores=1)
phytools::plotSimmap(simmap[[1]], fsize=.5)
MFT_res.corHMM$states
MFT_res.corHMM$tip.states
MFT_res.corHMM <- corHMM(phy = tandem_tree, data = tandem_data,
rate.cat = 2, rate.mat = MFT_FullMat,
node.states = "none", root.p = "maddfitz",
get.tip.states = TRUE)
MFT_res.corHMM <- corHMM(phy = tandem_tree, data = tandem_data,
rate.cat = 2, rate.mat = MFT_FullMat,
node.states = "none", root.p = "maddfitz",
get.tip.states = TRUE, nstarts = 2)
MFT_res.corHMM <- corHMM(phy = tandem_tree, data = tandem_data,
rate.cat = 2, rate.mat = MFT_FullMat,
node.states = "none", root.p = "maddfitz",
get.tip.states = TRUE, nstarts = 100)
MFT_res.corHMM
MFT_res.corHMM <- corHMM(phy = tandem_tree, data = tandem_data,
rate.cat = 2, rate.mat = MFT_FullMat,
node.states = "none", root.p = "maddfitz",
get.tip.states = TRUE, nstarts = 10)
MFT_res.corHMM
MFT_res.corHMM <- corHMM(phy = tandem_tree, data = tandem_data,
rate.cat = 2, rate.mat = MFT_FullMat,
node.states = "none", root.p = "maddfitz",
get.tip.states = TRUE, nstarts = 10)
MFT_res.corHMM
MFT_res.corHMM$tip.states
fithrmARD2<-fitHRM(tandem_tree,tandem,model="ARD", parallel=T, ncat=c(1,2))
fit_aov <- anova(fitER, fitARD, fithrmER2, fithrmARD2)
# ---------------------------------------------------------------------------- #
# prep data
# ---------------------------------------------------------------------------- #
{
# tree data
{
#tree.file <- "data_raw/tree/run1_burn20_mcc_median.tree"
tree.file <- "data_raw/tree/run5_400M_burnin20_mcc_median.tree"
tree <- read.nexus(tree.file)
labels <- tree$tip.label
labels <- str_replace(labels, "Cubi_tenu", "Cubitermes_tenuiceps")
labels <- str_replace(labels, "Tern_pall", "Ternicubitermes_pall")
}
# tandem data (remove some taxa without phylogeny information)
{
d_tandem <- read.csv("data_raw/tree/tandem_info_Mizumoto-etal-2022-PNAS.csv")
d_tandem <- d_tandem[d_tandem$Species != "convulsionarius",]
d_tandem <- d_tandem[d_tandem$Genus != "Odontotermes" | (
d_tandem$Species != "distans" &
d_tandem$Species != "brunneus" &
d_tandem$Species != "assmuthi")   ,]
d_tandem <- d_tandem[d_tandem$Genus != "Nasutitermes" | (
d_tandem$Species != "nigriceps" &
d_tandem$Species != "ephratae" &
d_tandem$Species != "costalis")   ,]
d_tandem <- d_tandem[d_tandem$Species != "dimorphus",]
d_tandem <- d_tandem[d_tandem$Species != "unicolor",]
d_tandem <- d_tandem[d_tandem$Species != "edentatus",]
d_tandem <- d_tandem[d_tandem$Species != "suspensus",]
d_tandem <- d_tandem[d_tandem$Species != "bequarerti",]
d_tandem <- d_tandem[d_tandem$Species != "macrocephalus",]
d_tandem <- d_tandem[d_tandem$Species != "wheeleri",]
d_tandem <- d_tandem[d_tandem$Species != "atlanticus",]
}
# matching data and tree
{
label_num_list <- numeric(length(d_tandem[,1]))
options(warn=2)
for(i_d in 1:length(d_tandem[,1])){
genus <- d_tandem[i_d,]$Genus
species <- d_tandem[i_d,]$Species
label_num <- which(str_detect(labels, genus))
if(length(label_num) > 1){
label_num <- which(str_detect(labels, genus) & str_detect(labels, species))
if(length(label_num) > 1){
print(paste(genus, species, "multiple tips exist.", "use first one."))
label_num <- label_num[1]
}
} else if(length(label_num) == 0){
label_num <- NA
}
label_num_list[i_d] <- label_num
}
d_tandem$label <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
d_tandem$label_num <- label_num_list
d_tandem <- d_tandem[!is.na(d_tandem$label_num),]
labels[d_tandem$label_num] <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
tree$tip.label <- labels
tree_dropped <- drop.tip(tree, labels[!(1:length(labels) %in% d_tandem$label_num)])
tandem_tree <- ladderize(tree_dropped, right = TRUE)
}
}
tandem <- d_tandem$Tandem
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
fitER <- fitMk(tandem_tree, tandem, model="ER", pi="fitzjohn")
fitARD <- fitMk(tandem_tree, tandem, model="ARD", pi="fitzjohn")
fithrmER2<-fitHRM(tandem_tree,tandem,model="ER", parallel=T, ncat=c(1,2))
fithrmARD2<-fitHRM(tandem_tree,tandem,model="ARD", parallel=T, ncat=c(1,2))
fit_aov <- anova(fitER, fitARD, fithrmER2, fithrmARD2)
cols = viridis(3)
anc_parity <- ancr(fitARD,tips=TRUE)
plot(anc_parity,args.nodelabels=list(piecol=cols),
args.tiplabels=list(piecol=cols))
anc_parity <- ancr(fithrmARD2,tips=TRUE)
plot(anc_parity,args.nodelabels=list(piecol=cols),
args.tiplabels=list(piecol=cols))
tandem <- d_tandem$Leader
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
tandem[is.na(tandem)] <- "female"
leader <- d_tandem$Leader
names(leader) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
leader <- as.factor(leader)
X <- to.matrix(leader, levels(leader))
labs <- row.names(X[apply(X, 1, sum) == 0,])
X[apply(X, 1, sum) == 0, 2:4] <- 1
fit1 <- fitMk(tandem_tree, X, model="ARD", pi="fitzjohn")
fit2 <- fitMk(tandem_tree, X, model="ER", pi="fitzjohn")
fit3 <- fitMk(tandem_tree, X, model="SYM", pi="fitzjohn")
fit4 <- fitHRM(tandem_tree, X, model="ER", parallel=T)
anova(fit1, fit2, fit3)
ace1 <- ancr(fit3,tips=TRUE)
plot(ace1)
tips<-sapply(labs,function(x,y) which(y==x),y=tandem_tree$tip.label)
add.arrow(tandem_tree,tips,arrl=3,offset=2,lwd=2,
col=palette()[4])
d_tandem$leader
d_tandem$Leader
d_tandem$Leader
is.na(d_tandem$Leader)
d_tandem$label[ is.na(d_tandem$Leader) ]
tandem_tree2 <- drop.tip(tandem_tree,  d_tandem$label[ is.na(d_tandem$Leader) ])
leader <- d_tandem$Leader[ !is.na(d_tandem$Leader) ]
tandem_tree2 <- drop.tip(tandem_tree,  d_tandem$label[ is.na(d_tandem$Leader) ])
leader <- d_tandem$Leader[ !is.na(d_tandem$Leader) ]
leader
leader == "female" | leader == "both"
f_leader <- (leader == "female" | leader == "both")
fitER <- fitMk(tandem_tree2, f_leader, model="ER", pi="fitzjohn")
f_leader
tandem_tree2
fitER <- fitMk(tandem_tree2, f_leader, model="ER", pi="fitzjohn")
fitER <- fitMk(tandem_tree2, f_leader*1, model="ER", pi="fitzjohn")
f_leader
d_tandem$Leader[ !is.na(d_tandem$Leader) ]
f_leader
name(f_leader) <- d_tandem$label[ !is.na(d_tandem$Leader) ]
fitER <- fitMk(tandem_tree2, f_leader, model="ER", pi="fitzjohn")
names(f_leader) <- d_tandem$label[ !is.na(d_tandem$Leader) ]
fitER <- fitMk(tandem_tree2, f_leader, model="ER", pi="fitzjohn")
fitER <- fitMk(tandem_tree2, f_leader, model="ER", pi="fitzjohn")
fitARD <- fitMk(tandem_tree2, f_leader, model="ARD", pi="fitzjohn")
fithrmER2<-fitHRM(tandem_tree2, f_leader,model="ER", parallel=T, ncat=c(1,2))
fithrmARD2<-fitHRM(tandem_tree2, f_leader,model="ARD", parallel=T, ncat=c(1,2))
fit_aov <- anova(fitER, fitARD, fithrmER2, fithrmARD2)
cols = viridis(3)
anc_parity <- ancr(fithrmARD2,tips=TRUE)
plot(anc_parity,args.nodelabels=list(piecol=cols),
args.tiplabels=list(piecol=cols))
fitARD
anc_parity <- ancr(fitARD,tips=TRUE)
plot(anc_parity,args.nodelabels=list(piecol=cols),
args.tiplabels=list(piecol=cols))
f_leader <- (leader == "male" | leader == "both")
m_leader <- (leader == "male" | leader == "both")
names(m_leader) <- d_tandem$label[ !is.na(d_tandem$Leader) ]
fitER <- fitMk(tandem_tree2, m_leader, model="ER", pi="fitzjohn")
fitARD <- fitMk(tandem_tree2, m_leader, model="ARD", pi="fitzjohn")
fithrmER2<-fitHRM(tandem_tree2, m_leader,model="ER", parallel=T, ncat=c(1,2))
fithrmARD2<-fitHRM(tandem_tree2, m_leader,model="ARD", parallel=T, ncat=c(1,2))
fit_aov <- anova(fitER, fitARD, fithrmER2, fithrmARD2)
cols = viridis(3)
anc_parity <- ancr(fitARD,tips=TRUE)
plot(anc_parity,args.nodelabels=list(piecol=cols),
args.tiplabels=list(piecol=cols))
# ---------------------------------------------------------------------------- #
# prep data
# ---------------------------------------------------------------------------- #
{
# tree data
{
#tree.file <- "data_raw/tree/run1_burn20_mcc_median.tree"
tree.file <- "data_raw/tree/run5_400M_burnin20_mcc_median.tree"
tree <- read.nexus(tree.file)
labels <- tree$tip.label
labels <- str_replace(labels, "Cubi_tenu", "Cubitermes_tenuiceps")
labels <- str_replace(labels, "Tern_pall", "Ternicubitermes_pall")
}
# tandem data (remove some taxa without phylogeny information)
{
d_tandem <- read.csv("data_raw/tree/tandem_info_Mizumoto-etal-2022-PNAS.csv")
d_tandem <- d_tandem[d_tandem$Species != "convulsionarius",]
d_tandem <- d_tandem[d_tandem$Genus != "Odontotermes" | (
d_tandem$Species != "distans" &
d_tandem$Species != "brunneus" &
d_tandem$Species != "assmuthi")   ,]
d_tandem <- d_tandem[d_tandem$Genus != "Nasutitermes" | (
d_tandem$Species != "nigriceps" &
d_tandem$Species != "ephratae" &
d_tandem$Species != "costalis")   ,]
d_tandem <- d_tandem[d_tandem$Species != "dimorphus",]
d_tandem <- d_tandem[d_tandem$Species != "unicolor",]
d_tandem <- d_tandem[d_tandem$Species != "edentatus",]
d_tandem <- d_tandem[d_tandem$Species != "suspensus",]
d_tandem <- d_tandem[d_tandem$Species != "bequarerti",]
d_tandem <- d_tandem[d_tandem$Species != "macrocephalus",]
d_tandem <- d_tandem[d_tandem$Species != "wheeleri",]
d_tandem <- d_tandem[d_tandem$Species != "atlanticus",]
}
# matching data and tree
{
label_num_list <- numeric(length(d_tandem[,1]))
options(warn=2)
for(i_d in 1:length(d_tandem[,1])){
genus <- d_tandem[i_d,]$Genus
species <- d_tandem[i_d,]$Species
label_num <- which(str_detect(labels, genus))
if(length(label_num) > 1){
label_num <- which(str_detect(labels, genus) & str_detect(labels, species))
if(length(label_num) > 1){
print(paste(genus, species, "multiple tips exist.", "use first one."))
label_num <- label_num[1]
}
} else if(length(label_num) == 0){
label_num <- NA
}
label_num_list[i_d] <- label_num
}
d_tandem$label <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
d_tandem$label_num <- label_num_list
d_tandem <- d_tandem[!is.na(d_tandem$label_num),]
labels[d_tandem$label_num] <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
tree$tip.label <- labels
tree_dropped <- drop.tip(tree, labels[!(1:length(labels) %in% d_tandem$label_num)])
tandem_tree <- ladderize(tree_dropped, right = TRUE)
}
}
tandem <- d_tandem$Tandem
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
fitER <- fitMk(tandem_tree, tandem, model="ER", pi="fitzjohn")
fitARD <- fitMk(tandem_tree, tandem, model="ARD", pi="fitzjohn")
options(warn = 0)
tandem <- d_tandem$Tandem
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
fitER <- fitMk(tandem_tree, tandem, model="ER", pi="fitzjohn")
fitARD <- fitMk(tandem_tree, tandem, model="ARD", pi="fitzjohn")
fithrmER2<-fitHRM(tandem_tree,tandem,model="ER", parallel=T, ncat=c(1,2))
fithrmARD2<-fitHRM(tandem_tree,tandem,model="ARD", parallel=T, ncat=c(1,2))
fitER<-ace(tandem_tree, tandem, model="ER",type="discrete")
tandem_tree
fitER<-ace(tandem, tandem_tree, model="ER",type="discrete")
fitER
fitER<-ace(tandem, tandem_tree, model="ARD",type="discrete")
fitER<-ace(tandem, tandem_tree, model="ER",type="discrete")
fitARD<-ace(tandem, tandem_tree, model="ARD",type="discrete")
anova(fitER, fitARD)
fit_aov <- anova(fitER, fitARD, fithrmER2, fithrmARD2)
fitER <- ace(tandem, tandem_tree, model="ER",type="discrete")
fitARD <- ace(tandem, tandem_tree, model="ARD",type="discrete")
anova(fitER, fitARD)
fitER
fitARD
plotTree(tandem_tree,type="fan",fsize=0.8,ftype="i")
plotTree(tandem_tree,fsize=0.8,ftype="i")
plotTree(tandem_tree,fsize=0.8,ftype="i")
nodelabels(node=1:tandem_tree$Nnode+Ntip(tandem_tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(tandem,sort(unique(tandem))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,tandem=0.9*par()$usr[1],
y=-max(nodeHeights(tandem_tree)),fsize=0.8)
tandem <- d_tandem$Tandem
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
fitER <- ace(tandem, tandem_tree, model="ER",type="discrete")
fitARD <- ace(tandem, tandem_tree, model="ARD",type="discrete")
anova(fitER, fitARD)
plotTree(tandem_tree,fsize=0.8,ftype="i")
nodelabels(node=1:tandem_tree$Nnode+Ntip(tandem_tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(tandem,sort(unique(tandem))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,tandem=0.9*par()$usr[1],
y=-max(nodeHeights(tandem_tree)),fsize=0.8)
tandem
tandem <- tandem[tandem_tree$tip.label]
fitER <- ace(tandem, tandem_tree, model="ER",type="discrete")
fitARD <- ace(tandem, tandem_tree, model="ARD",type="discrete")
anova(fitER, fitARD)
plotTree(tandem_tree,fsize=0.8,ftype="i")
nodelabels(node=1:tandem_tree$Nnode+Ntip(tandem_tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(tandem,sort(unique(tandem))),piecol=cols,cex=0.3)
add.simmap.legend(colors=cols,prompt=FALSE,tandem=0.9*par()$usr[1],
y=-max(nodeHeights(tandem_tree)),fsize=0.8)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=-max(nodeHeights(tandem_tree)),fsize=0.8)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.1,
y=0.1),fsize=0.8)
add.simmap.legend(colors=cols,prompt=FALSE,x=0.1,
y=0.1,fsize=0.8)
add.simmap.legend(colors=cols, prompt=FALSE, x=0.1,
y=0.1, fsize=0.8)
plotTree(tandem_tree,fsize=0.8,ftype="i")
nodelabels(node=1:tandem_tree$Nnode+Ntip(tandem_tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(tandem,sort(unique(tandem))),piecol=cols,cex=0.3)
plotTree(tandem_tree,fsize=0.8,ftype="i")
nodelabels(node=1:tandem_tree$Nnode+Ntip(tandem_tree),
pie=fitARD$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(tandem,sort(unique(tandem))),piecol=cols,cex=0.3)
tandem <- d_tandem$Tandem
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
tandem <- tandem[tandem_tree$tip.label]
fitER <- ace(tandem, tandem_tree, model="ER",type="discrete")
fitARD <- ace(tandem, tandem_tree, model="ARD",type="discrete")
anova(fitER, fitARD)
tandem <- d_tandem$Tandem
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
tandem <- tandem[tandem_tree$tip.label]
fitER <- ace(tandem, tandem_tree, model="ER",type="discrete")
plotTree(tandem_tree,fsize=0.8,ftype="i")
nodelabels(node=1:tandem_tree$Nnode+Ntip(tandem_tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(tandem,sort(unique(tandem))),piecol=cols,cex=0.3)
First, I just do ancestral state reconstruction for tandem (1) or not (0).
tandem <- d_tandem$Tandem
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
tandem <- tandem[tandem_tree$tip.label]
fitER <- ace(tandem, tandem_tree, model="ER",type="discrete")
plotTree(tandem_tree,fsize=0.8,ftype="i")
nodelabels(node=1:tandem_tree$Nnode+Ntip(tandem_tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(tandem,sort(unique(tandem))),piecol=cols,cex=0.3)
tandem <- d_tandem$Tandem
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
tandem <- tandem[tandem_tree$tip.label]
fitARD <- ace(tandem, tandem_tree, model="ARD",type="discrete")
plotTree(tandem_tree,fsize=0.8,ftype="i")
nodelabels(node=1:tandem_tree$Nnode+Ntip(tandem_tree),
pie=fitARD$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(tandem,sort(unique(tandem))),piecol=cols,cex=0.3)
anova(fitER, fitARD)
# Pylogenetic analysis
{
require(phytools)
require(stringr)
}
# ---------------------------------------------------------------------------- #
# prep data
# ---------------------------------------------------------------------------- #
{
# tree data
{
#tree.file <- "data_raw/tree/run1_burn20_mcc_median.tree"
tree.file <- "data_raw/tree/run5_400M_burnin20_mcc_median.tree"
tree <- read.nexus(tree.file)
labels <- tree$tip.label
labels <- str_replace(labels, "Cubi_tenu", "Cubitermes_tenuiceps")
labels <- str_replace(labels, "Tern_pall", "Ternicubitermes_pall")
}
# tandem data (remove some taxa without phylogeny information)
{
d_tandem <- read.csv("data_raw/tree/tandem_info_Mizumoto-etal-2022-PNAS.csv")
d_tandem <- d_tandem[d_tandem$Species != "convulsionarius",]
d_tandem <- d_tandem[d_tandem$Genus != "Odontotermes" | (
d_tandem$Species != "distans" &
d_tandem$Species != "brunneus" &
d_tandem$Species != "assmuthi")   ,]
d_tandem <- d_tandem[d_tandem$Genus != "Nasutitermes" | (
d_tandem$Species != "nigriceps" &
d_tandem$Species != "ephratae" &
d_tandem$Species != "costalis")   ,]
d_tandem <- d_tandem[d_tandem$Species != "dimorphus",]
d_tandem <- d_tandem[d_tandem$Species != "unicolor",]
d_tandem <- d_tandem[d_tandem$Species != "edentatus",]
d_tandem <- d_tandem[d_tandem$Species != "suspensus",]
d_tandem <- d_tandem[d_tandem$Species != "bequarerti",]
d_tandem <- d_tandem[d_tandem$Species != "macrocephalus",]
d_tandem <- d_tandem[d_tandem$Species != "wheeleri",]
d_tandem <- d_tandem[d_tandem$Species != "atlanticus",]
}
# matching data and tree
{
label_num_list <- numeric(length(d_tandem[,1]))
options(warn=2)
for(i_d in 1:length(d_tandem[,1])){
genus <- d_tandem[i_d,]$Genus
species <- d_tandem[i_d,]$Species
label_num <- which(str_detect(labels, genus))
if(length(label_num) > 1){
label_num <- which(str_detect(labels, genus) & str_detect(labels, species))
if(length(label_num) > 1){
print(paste(genus, species, "multiple tips exist.", "use first one."))
label_num <- label_num[1]
}
} else if(length(label_num) == 0){
label_num <- NA
}
label_num_list[i_d] <- label_num
}
d_tandem$label <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
d_tandem$label_num <- label_num_list
d_tandem <- d_tandem[!is.na(d_tandem$label_num),]
labels[d_tandem$label_num] <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
tree$tip.label <- labels
tree_dropped <- drop.tip(tree, labels[!(1:length(labels) %in% d_tandem$label_num)])
tandem_tree <- ladderize(tree_dropped, right = TRUE)
}
}
# ---------------------------------------------------------------------------- #
tandem <- d_tandem$Tandem
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
tandem <- tandem[tandem_tree$tip.label]
fitER <- ace(tandem, tandem_tree, model="ER",type="discrete")
plotTree(tandem_tree,fsize=0.8,ftype="i")
nodelabels(node=1:tandem_tree$Nnode+Ntip(tandem_tree),
pie=fitER$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(tandem,sort(unique(tandem))),piecol=cols,cex=0.3)
tandem <- d_tandem$Tandem
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
tandem <- tandem[tandem_tree$tip.label]
fitARD <- ace(tandem, tandem_tree, model="ARD",type="discrete")
plotTree(tandem_tree,fsize=0.8,ftype="i")
nodelabels(node=1:tandem_tree$Nnode+Ntip(tandem_tree),
pie=fitARD$lik.anc,piecol=cols,cex=0.5)
tiplabels(pie=to.matrix(tandem,sort(unique(tandem))),piecol=cols,cex=0.3)
anova(fitER, fitARD)
source("C:/Users/nobua/OneDrive_Auburn/paper_and_projects/old_project_tobe_published/GlyptoTandemAnalysis/analysis/note.Rmd")
source("C:/Users/nobua/OneDrive_Auburn/paper_and_projects/old_project_tobe_published/GlyptoTandemAnalysis/analysis/note.Rmd")
source("C:/Users/nobua/OneDrive_Auburn/paper_and_projects/old_project_tobe_published/GlyptoTandemAnalysis/analysis/note.Rmd")
fitER <- fitMk(tandem_tree, tandem, model="ER", pi="fitzjohn")
fitARD <- fitMk(tandem_tree, tandem, model="ARD", pi="fitzjohn")
fithrmER2<-fitHRM(tandem_tree,tandem,model="ER", parallel=T, ncat=c(1,2))
fithrmARD2<-fitHRM(tandem_tree,tandem,model="ARD", parallel=T, ncat=c(1,2))
fit_aov <- anova(fitER, fitARD, fithrmER2, fithrmARD2)
plot(fithrmARD2)
anc_parity <- ancr(fithrmARD2,tips=TRUE)
plot(anc_parity,args.nodelabels=list(piecol=cols),
args.tiplabels=list(piecol=cols))
fitER <- fitMk(tandem_tree, tandem, model="ER", pi="fitzjohn")
fitARD <- fitMk(tandem_tree, tandem, model="ARD", pi="fitzjohn")
fithrmER2<-fitHRM(tandem_tree,tandem,model="ER", parallel=T, ncat=c(1,2), pi="fitzjohn")
fithrmARD2<-fitHRM(tandem_tree,tandem,model="ARD", parallel=T, ncat=c(1,2), pi="fitzjohn")
fit_aov <- anova(fitER, fitARD, fithrmER2, fithrmARD2)
leader <- d_tandem$Leader
names(leader) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
leader <- as.factor(leader)
X <- to.matrix(leader, levels(leader))
labs <- row.names(X[apply(X, 1, sum) == 0,])
X[apply(X, 1, sum) == 0, 2:4] <- 1
fit1 <- fitMk(tandem_tree, X, model="ARD", pi="fitzjohn")
fit2 <- fitMk(tandem_tree, X, model="ER", pi="fitzjohn")
fit3 <- fitMk(tandem_tree, X, model="SYM", pi="fitzjohn")
anova(fit1, fit2, fit3)
ace1 <- ancr(fit3,tips=TRUE)
plot(ace1)
tips<-sapply(labs,function(x,y) which(y==x),y=tandem_tree$tip.label)
add.arrow(tandem_tree,tips,arrl=3,offset=2,lwd=2,
col=palette()[4])
tandem <- d_tandem$Tandem
names(tandem) <- paste(d_tandem$Genus, d_tandem$Species, sep="_")
tandem <- tandem[tandem_tree$tip.label]
fitER <- ace(tandem, tandem_tree, model="ER",type="discrete")
fitARD <- ace(tandem, tandem_tree, model="ARD",type="discrete")
anova(fitER, fitARD)
fitER
fitARD
aic(fitER)
Aic(fitER)
AIC(fitER)
AIC(fitARD)
